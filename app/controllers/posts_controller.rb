class PostsController < ApplicationController


  def new
    @post = Post.new
    @countries = ["AL ðŸ‡¦ðŸ‡± Albania", "AD ðŸ‡¦ðŸ‡© Andorra", "AM ðŸ‡¦ðŸ‡² Armenia", "AT ðŸ‡¦ðŸ‡¹ Austria", "AZ ðŸ‡¦ðŸ‡¿ Azerbaijan", "BA ðŸ‡§ðŸ‡¦ Bosnia and Herzegovina", "BE ðŸ‡§ðŸ‡ª Belgium", "BG ðŸ‡§ðŸ‡¬ Bulgaria", "BY ðŸ‡§ðŸ‡¾ Belarus", "CH ðŸ‡¨ðŸ‡­ Switzerland", "CY ðŸ‡¨ðŸ‡¾ Cyprus", "CZ ðŸ‡¨ðŸ‡¿ Czech Republic", "DE ðŸ‡©ðŸ‡ª Germany", "DK ðŸ‡©ðŸ‡° Denmark", "EE ðŸ‡ªðŸ‡ª Estonia", "ES ðŸ‡ªðŸ‡¸ Spain", "FI ðŸ‡«ðŸ‡® Finland", "FR ðŸ‡«ðŸ‡· France", "GE ðŸ‡¬ðŸ‡ª Georgia", "GR ðŸ‡¬ðŸ‡· Greece", "HR ðŸ‡­ðŸ‡· Croatia", "HU ðŸ‡­ðŸ‡º Hungary", "IE ðŸ‡®ðŸ‡ª Ireland", "IS ðŸ‡®ðŸ‡¸ Iceland", "IT ðŸ‡®ðŸ‡¹ Italy", "LV ðŸ‡±ðŸ‡» Latvia", "LI ðŸ‡±ðŸ‡® Liechtenstein", "LT ðŸ‡±ðŸ‡¹ Lithuania", "LU ðŸ‡±ðŸ‡º Luxembourg", "MK ðŸ‡²ðŸ‡° Macedonia", "MD ðŸ‡²ðŸ‡© Moldova", "ME ðŸ‡²ðŸ‡ª Montenegro", "NL ðŸ‡³ðŸ‡± Netherlands", "NO ðŸ‡³ðŸ‡´ Norway", "PL ðŸ‡µðŸ‡± Poland", "PT ðŸ‡µðŸ‡¹ Portugal", "RO ðŸ‡·ðŸ‡´ Romania", "RS ðŸ‡·ðŸ‡¸ Serbia", "RU ðŸ‡·ðŸ‡º Russia", "SE ðŸ‡¸ðŸ‡ª Sweden", "SI ðŸ‡¸ðŸ‡® Slovenia", "SK ðŸ‡¸ðŸ‡° Slovakia", "TR ðŸ‡¹ðŸ‡· Turkey", "UA ðŸ‡ºðŸ‡¦ Ukraine", "UK ðŸ‡¬ðŸ‡§ United Kingdom", "XK ðŸ‡½ðŸ‡° Kosovo"]
  end

  def index
  @posts = Post.where(nil)
  filtering_params(params).each do |key, value|
    @posts = @posts.public_send("filter_by_#{key}", value) if value.present?
  end

  def show
    @post = Post.find(params[:id])
    @user = Post.find(params[:id]).user
    @posts = Post.where(user: @user)

  end

  def create
    @post = Post.new(post_params)
    @post.user = current_user
    @post.status = true
    if @post.save
      redirect_to posts_path
    else
      render :new
    end

  end

  end

  private

  def post_params
    params.require(:post).permit(:load_date, :unload_date, :load_time, :unload_time, :length, :weight, :load_address, :unload_address, :description, :truck_type, :adr, :price, :load_city, :unload_city, :load_c, :unload_c)
  end

  def filtering_params(params)
    params.slice(:load_date, :load_c, :unload_c, :truck_type)
  end

end
